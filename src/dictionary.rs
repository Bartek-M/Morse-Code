use std::collections::HashMap;

const DICTIONARY: [(char, &str); 54] = [
    ('A', ".-"), 
    ('B', "-..."), 
    ('C', "-.-."), 
    ('D', "-.."), 
    ('E', "."),
    ('F', "..-."), 
    ('G', "--."), 
    ('H', "...."), 
    ('I', ".."), 
    ('J', ".---"), 
    ('K', "-.-"), 
    ('L', ".-.."), 
    ('M', "--"), 
    ('N', "-."), 
    ('O', "---"), 
    ('P', ".--."), 
    ('Q', "--.-"), 
    ('R', ".-."),  
    ('S', "..."), 
    ('T', "-"), 
    ('U', "..-"),
    ('V', "...-"),
    ('W', ".--"),  
    ('X', "-..-"), 
    ('Y', "-.--"), 
    ('Z', "--.."), 
    ('0', "-----"), 
    ('1', ".----"), 
    ('2', "..---"), 
    ('3', "...--"), 
    ('4', "....-"), 
    ('5', "....."), 
    ('6', "-...."), 
    ('7', "--..."), 
    ('8', "---.."), 
    ('9', "----."),
    ('.', ".-.-.-"),
    (',', "--..--"), 
    ('?', "..--.."),
    ('!', "-.-.--"), 
    ('/', "-..-."), 
    ('(', "-.--."), 
    (')', "-.--.-"), 
    ('&', ".-..."),
    (':', "---..."), 
    (';', "-.-.-."),
    ('=', "-...-"), 
    ('+', ".-.-."), 
    ('-', "-....-"), 
    ('_', "..--.-"), 
    ('"', ".-..-."),
    ('$', "...-..-"), 
    ('@', ".--.-."), 
    (' ', "/") // Space as '/'
];

pub fn morse_dict() -> (HashMap<char, &'static str>, HashMap<&'static str, char>) {
    let mut text_to_morse = HashMap::new();
    let mut morse_to_text = HashMap::new();
    
    for (char, morse) in DICTIONARY {
        text_to_morse.insert(char, morse);
        morse_to_text.insert(morse, char);
    }

    return (text_to_morse, morse_to_text);
}